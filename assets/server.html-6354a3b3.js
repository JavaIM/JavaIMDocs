import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,d as a,e,b as n,f as s}from"./app-b3cf41d9.js";const d={},p=s('<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>This page is about installing JavaIM Server.</p><h1 id="üõ†-start-server" tabindex="-1"><a class="header-anchor" href="#üõ†-start-server" aria-hidden="true">#</a> üõ† Start Server</h1><h2 id="use-the-built-jar-package" tabindex="-1"><a class="header-anchor" href="#use-the-built-jar-package" aria-hidden="true">#</a> Use the built jar package</h2><h3 id="step-1-install-java" tabindex="-1"><a class="header-anchor" href="#step-1-install-java" aria-hidden="true">#</a> Step 1. Install Java</h3><p>JavaIM requires Java 17. You need to go to Oracle‚Äôs official website to download the installation package of JDK 17.</p>',6),c={href:"https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.exe",target:"_blank",rel:"noopener noreferrer"},u=a("h3",{id:"step-2-get-javaim",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#step-2-get-javaim","aria-hidden":"true"},"#"),e(" Step 2. Get JavaIM")],-1),h={href:"https://github.com/JavaIM/JavaIM/releases",target:"_blank",rel:"noopener noreferrer"},v=s(`<h3 id="step-3-run-javaim" tabindex="-1"><a class="header-anchor" href="#step-3-run-javaim" aria-hidden="true">#</a> Step 3. Run JavaIM</h3><p>JavaIM has two startup modes: GUI startup and command line startup.</p><p>To start the GUI, simply double-click to open it.</p><p>If you want to use the command line, please use &quot;java -jar JavaIM.jar&quot; to start it.</p><p>If you are using Windows Server Core, please add &quot;nogui&quot; after the startup command, such as &quot;java -jar JavaIM.jar nogui&quot;, and then follow the prompts.</p><h3 id="step-4-configure" tabindex="-1"><a class="header-anchor" href="#step-4-configure" aria-hidden="true">#</a> Step 4. Configure</h3><p>When JavaIM is run for the first time, it will generate two configuration files and two keys in the running directory. The configuration files are for the client and server respectively. Please send the public key to users who need to use the client. </p><p>As a server, you only need to edit the ‚Äòserver.properties‚Äô file.</p><p>A standard properties file should look like this:</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">MySQLDataBaseHost</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1 // MySQL database address</span>
<span class="token key attr-name">MySQLDataBaseName</span><span class="token punctuation">=</span><span class="token value attr-value">JavaIM    // MySQL database name</span>
<span class="token key attr-name">MAX_CLIENT</span><span class="token punctuation">=</span><span class="token value attr-value">-1               // Maximum number of clients that can be connected, -1 means no limit</span>
<span class="token key attr-name">Use_SQLITE_Mode</span><span class="token punctuation">=</span><span class="token value attr-value">true        // Whether to use SQLite</span>
<span class="token key attr-name">MySQLDataBaseUser</span><span class="token punctuation">=</span><span class="token value attr-value">JavaIM    // MySQL database username</span>
<span class="token key attr-name">MySQLDataBasePort</span><span class="token punctuation">=</span><span class="token value attr-value">3306      // MySQL database port</span>
<span class="token key attr-name">EnableLoginSystem</span><span class="token punctuation">=</span><span class="token value attr-value">true      // Whether to enable login system</span>
<span class="token key attr-name">MySQLDataBasePasswd</span><span class="token punctuation">=</span><span class="token value attr-value">JavaIM  // MySQL database password</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="install-by-docker" tabindex="-1"><a class="header-anchor" href="#install-by-docker" aria-hidden="true">#</a> Install by Docker</h2><p>This part is still under development.</p><h2 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> Build</h2>`,13),m={href:"http://build.sh",target:"_blank",rel:"noopener noreferrer"},b=a("p",null,"Note that the code in the repository is usually the latest and has not been extensively tested. There may be a lot of bugs and it is not recommended for production use.",-1);function k(f,y){const t=o("ExternalLinkIcon");return i(),l("div",null,[p,a("p",null,[e("Click "),a("a",c,[e("here"),n(t)]),e(" to download the installation package of JDK 17.")]),u,a("p",null,[e("The JavaIM client and server are merged into one program. Please go to the official JavaIM repository to download the latest "),a("a",h,[e("releases"),n(t)]),e(".")]),v,a("p",null,[e("If you want to build JavaIM yourself, please install Maven, configure the Java development environment, pull the JavaIM repository, and run ‚Äúbuild.bat‚Äù or ‚Äú"),a("a",m,[e("build.sh"),n(t)]),e("‚Äù.")]),b])}const M=r(d,[["render",k],["__file","server.html.vue"]]);export{M as default};
